{"entries":[{"timestamp":1730874239636,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[0,"</xm"]],"start1":12,"start2":12,"length1":70,"length2":113}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"/**\n * Functions are mapped to blocks using various macros\n * in comments starting with %. The most important macro\n * is \"block\", and it specifies that a block should be\n * generated for an **exported** function.\n */\n\n//% color=\"#0B84A5\" weight=100\nnamespace ledControl {\n\n    //% block=\"Set LED on pin %pin to %state\"\n    //% pin.fieldEditor=\"pin\" pin.defl=DigitalPin.P12\n    //% state.defl=\"true\"\n    export function setLED(pin: DigitalPin, state: boolean): void {\n        if (state) {\n            pins.digitalWritePin(pin, 1); // Set the pin to HIGH (on)\n        } else {\n            pins.digitalWritePin(pin, 0); // Set the pin to LOW (off)\n        }\n    }\n\n    //% block=\"Delay for %time ms\"\n    //% time.min=0 time.max=10000\n    export function delay(time: number): void {\n        basic.pause(time); // Pauses the program for a specified time\n    }\n\n    //% block=\"Initialize LEDs\"\n    export function initializeLEDs(): void {\n        setLED(DigitalPin.P12, false);  // GPIO2 off\n        setLED(DigitalPin.P16, true);   // GPIO16 on\n    }\n\n    //% block=\"Alternate LEDs every second\"\n    export function alternateLEDs(): void {\n        setLED(DigitalPin.P12, true);   // GPIO2 on\n        setLED(DigitalPin.P16, false);  // GPIO16 off\n        delay(1000); // Wait for 1 second\n\n        setLED(DigitalPin.P12, false);  // GPIO2 off\n        setLED(DigitalPin.P16, true);   // GPIO16 on\n        delay(1000); // Wait for 1 second\n    }\n}\n\n//% color=\"#FF6347\" weight=90\nnamespace serialCommunication {\n\n    //% block=\"Initialize serial communication with baud rate %baudRate\"\n    //% baudRate.min=9600 baudRate.max=115200\n    export function initializeSerial(baudRate: number): void {\n        serial.redirect(\n            SerialPin.P1,  // RX Pin\n            SerialPin.P2,  // TX Pin\n            baudRate       // Baud rate (e.g., 9600)\n        );\n        basic.showString(\"Serial Init\");  // Confirm serial initialization\n    }\n\n}\n\n//% color=\"#00BFFF\" weight=80\nnamespace setupControl {\n\n    //% block=\"Initialize system with serial communication at baud rate %baudRate\"\n    export function initializeSystem(baudRate: number): void {\n        serialCommunication.initializeSerial(baudRate);  // Initialize serial with given baud rate\n        ledControl.initializeLEDs();  // Initialize LEDs\n    }\n\n    \n}"],[0,"\n"]],"start1":0,"start2":0,"length1":2306,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":234,"start2":234,"length1":76,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1730874239635,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"LED_on_ESP\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1730874306617}